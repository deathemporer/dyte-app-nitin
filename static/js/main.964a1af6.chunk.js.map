{"version":3,"sources":["components/Editor.js","components/NavBar.js","components/PreviewPane.js","components/App.js","index.js"],"names":["Editor","props","title","value","language","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","NavBar","useState","index","setIndex","fileSelector","event","onSelect","target","console","log","onClick","PreviewPane","srcDoc","web","sandbox","frameBorder","width","height","App","html","setHtml","css","setCss","js","setJs","setWeb","useEffect","timeout","setTimeout","clearTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAuCeA,EA9BA,SAACC,GAEd,IAAMC,EAAQD,EAAMC,MACdC,EAAQF,EAAME,MACdC,EAAWH,EAAMG,SACjBC,EAAWJ,EAAMI,SAMvB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BJ,IAC5B,cAAC,aAAD,CACEK,eARgB,SAACC,EAAQC,EAAMN,GACnCE,EAASF,IAQLA,MAAOA,EACPG,UAAU,sBACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMT,EACNU,MAAO,WACPC,aAAa,SCHRC,G,MA1BA,SAACf,GACd,MAA0BgB,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAe,SAACC,GACpBpB,EAAMqB,SAASD,EAAME,OAAOpB,OAC5BgB,EAASE,EAAME,OAAOpB,OACtBqB,QAAQC,IAAIJ,EAAME,OAAOpB,QAG3B,OACE,sBAAKG,UAAU,SAAf,UACE,+CACA,sBAAKA,UAAU,aAAf,UACE,wBAAQA,UAAS,cAAgB,GAAPY,EAAU,SAAS,IAAMf,MAAM,IAAIuB,QAASN,EAAtE,wBAGA,wBAAQd,UAAS,cAAgB,GAAPY,EAAU,SAAS,IAAMf,MAAM,IAAIuB,QAASN,EAAtE,uBAGA,wBAAQd,UAAS,cAAgB,GAAPY,EAAU,SAAS,IAAMf,MAAM,IAAIuB,QAASN,EAAtE,8BCFOO,G,MAhBK,SAAC1B,GACnB,OACE,qBAAKK,UAAU,eAAf,SACE,wBACAJ,MAAM,UACN0B,OAAQ3B,EAAM4B,IACdvB,UAAU,eACVwB,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,a,MC2DEC,MAlEf,SAAajC,GACX,MAAwBgB,mBAAS,IAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAsBnB,mBAAS,IAA/B,mBAAOoB,EAAP,KAAYC,EAAZ,KACA,EAAoBrB,mBAAS,IAA7B,mBAAOsB,EAAP,KAAWC,EAAX,KACA,EAAsBvB,mBAAS,IAA/B,mBAAOY,EAAP,KAAYY,EAAZ,KACAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAO,+BAAD,OAEEN,EAFF,iCAGGE,EAHH,mCAIIE,EAJJ,uCAOL,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGf,MAA0BtB,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,gCACE,sBAAKb,UAAU,WAAf,UACE,cAAC,EAAD,CAAQgB,SARW,SAACJ,GACxBC,EAASD,GACTM,QAAQC,IAAIP,MAQO,GAATA,EAEA,cAAC,EAAD,CACEd,SAAS,MACTF,MAAM,aACNC,MAAOgC,EACP9B,SAAU+B,IAGI,GAATlB,EAEP,cAAC,EAAD,CACEd,SAAS,MACTF,MAAM,YACNC,MAAOkC,EACPhC,SAAUiC,IAGI,GAATpB,EAEP,cAAC,EAAD,CACEd,SAAS,aACTF,MAAM,WACNC,MAAOoC,EACPlC,SAAUmC,SANT,KAYX,cAAC,EAAD,CAAaX,IAAKA,QC7DxBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.964a1af6.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\nimport \"./Editor.css\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled } from \"react-codemirror2\";\r\n\r\nconst Editor = (props) => {\r\n    \r\n  const title = props.title;\r\n  const value = props.value;\r\n  const language = props.language;\r\n  const onChange = props.onChange;\r\n\r\n   const handleChange = (editor, data, value) => {\r\n    onChange(value);\r\n   };\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <div className=\"title-bar\">{title}</div>\r\n      <Controlled\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { React, useState } from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = (props) => {\r\n  const [index, setIndex] = useState(0);\r\n  const fileSelector = (event) => {\r\n    props.onSelect(event.target.value);\r\n    setIndex(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h2>File Explorer</h2>\r\n      <div className=\"menu-items\">\r\n        <button className={`btn ${index==0? 'active':''}`} value=\"0\" onClick={fileSelector}>\r\n          index.html\r\n        </button>\r\n        <button className={`btn ${index==1? 'active':''}`} value=\"1\" onClick={fileSelector}>\r\n          index.css\r\n        </button>\r\n        <button className={`btn ${index==2? 'active':''}`} value=\"2\" onClick={fileSelector}>\r\n          index.js\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState } from \"react\";\r\nimport \"./PreviewPane.css\";\r\n\r\nconst PreviewPane = (props) => {\r\n  return (\r\n    <div className=\"preview-pane\">\r\n      <iframe \r\n      title=\"preview\"\r\n      srcDoc={props.web}\r\n      className='live-preview'\r\n      sandbox='allow-scripts'\r\n      frameBorder='0'\r\n      width='100%'\r\n      height='100%'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewPane;\r\n","import Editor from \"./Editor\";\nimport NavBar from \"./NavBar\";\nimport PreviewPane from \"./PreviewPane\";\nimport { React, useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [web, setWeb] = useState(\"\");\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setWeb(`\n      <html>\n      <body>${html}</body>\n      <style>${css}</style>\n      <script>${js}</script>\n      </html>\n     `);\n    }, 300);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n\n  const [index, setIndex] = useState(0);\n  const sendSelectedFile = (index) => {\n    setIndex(index);\n    console.log(index);\n  };\n\n  return (\n    <div>\n      <div className=\"top-pane\">\n        <NavBar onSelect={sendSelectedFile} />\n        {(() => {\n          if (index == 0) {\n            return (\n              <Editor\n                language=\"xml\"\n                title=\"index.html\"\n                value={html}\n                onChange={setHtml}\n              />\n            );\n          } else if (index == 1) {\n            return (\n              <Editor\n                language=\"css\"\n                title=\"index.css\"\n                value={css}\n                onChange={setCss}\n              />\n            );\n          } else if (index == 2) {\n            return (\n              <Editor\n                language=\"javascript\"\n                title=\"index.js\"\n                value={js}\n                onChange={setJs}\n              />\n            );\n          }\n        })()}\n      </div>\n      <PreviewPane web={web} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}